apply plugin: 'java-library'
apply plugin: "me.champeau.gradle.jmh"

sourceCompatibility = 1.8
version = '0.3.0'

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

task copyJavadocToDoc(type: Copy) {
	dependsOn javadoc
	from ("build/docs/javadoc")
	into ("docs/javadoc")	
}

repositories {
    jcenter()
    mavenCentral()
}

/*
plugins {
	id 'java-library'
  	id "me.champeau.gradle.jmh" version "0.3.1"
}
*/

buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "me.champeau.gradle:jmh-gradle-plugin:0.3.1"
  }
}

jmh {
   jmhVersion = '1.19' // Specifies JMH version
   includeTests = false // Allows to include test sources into generate JMH jar, i.e. use it when benchmarks depend on the test classes.
   duplicateClassesStrategy = 'fail' // Strategy to apply when encountring duplicate classes during creation of the fat jar (i.e. while executing jmhJar task)
}

dependencies {
    //api '...'

    implementation 'org.openjdk.jmh:jmh-core:1.19'
	
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'com.google.guava:guava:22.0'
    testImplementation 'com.google.guava:guava-testlib:22.0'
    
    //jmh 'org.openjdk.jmh:jmh-core:1.19'
    //jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.19'
}

/*
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
*/
